{
    "collab_server" : "",
    "contents" : "cvm.test <- function (x, y, type = c(\"W2\", \"U2\", \"A2\"), simulate.p.value = FALSE, \n          B = 2000, tol = 1e-08) \n{\n  cvm.pval.disc <- function(STAT, lambda) {\n    x <- STAT\n    theta <- function(u) {\n      VAL <- 0\n      for (i in 1:length(lambda)) {\n        VAL <- VAL + 0.5 * atan(lambda[i] * u)\n      }\n      return(VAL - 0.5 * x * u)\n    }\n    rho <- function(u) {\n      VAL <- 0\n      for (i in 1:length(lambda)) {\n        VAL <- VAL + log(1 + lambda[i]^2 * u^2)\n      }\n      VAL <- exp(VAL * 0.25)\n      return(VAL)\n    }\n    fun <- function(u) return(sin(theta(u))/(u * rho(u)))\n    pval <- 0\n    try(pval <- 0.5 + integrate(fun, 0, Inf, subdivisions = 1e+06)$value/pi, \n        silent = TRUE)\n    if (pval > 0.001) \n      return(pval)\n    if (pval <= 0.001) {\n      df <- sum(lambda != 0)\n      est1 <- dchisq(STAT/max(lambda), df)\n      logf <- function(t) {\n        ans <- -t * STAT\n        ans <- ans - 0.5 * sum(log(1 - 2 * t * lambda))\n        return(ans)\n      }\n      est2 <- 1\n      try(est2 <- exp(nlm(logf, 1/(4 * max(lambda)))$minimum), \n          silent = TRUE)\n      return(min(est1, est2))\n    }\n  }\n  cvm.stat.disc <- function(x, y, type = c(\"W2\", \"U2\", \"A2\")) {\n    type <- match.arg(type)\n    I <- knots(y)\n    N <- length(x)\n    e <- diff(c(0, N * y(I)))\n    obs <- rep(0, length(I))\n    for (j in 1:length(I)) {\n      obs[j] <- length(which(x == I[j]))\n    }\n    S <- cumsum(obs)\n    T <- cumsum(e)\n    H <- T/N\n    p <- e/N\n    t <- (p + p[c(2:length(p), 1)])/2\n    Z <- S - T\n    Zbar <- sum(Z * t)\n    S0 <- diag(p) - p %*% t(p)\n    A <- matrix(1, length(p), length(p))\n    A <- apply(row(A) >= col(A), 2, as.numeric)\n    E <- diag(t)\n    One <- rep(1, nrow(E))\n    K <- diag(0, length(H))\n    diag(K)[-length(H)] <- 1/(H[-length(H)] * (1 - H[-length(H)]))\n    Sy <- A %*% S0 %*% t(A)\n    M <- switch(type, W2 = E, U2 = (diag(1, nrow(E)) - E %*% \n                                      One %*% t(One)) %*% E %*% (diag(1, nrow(E)) - One %*% \n                                                                   t(One) %*% E), A2 = E %*% K)\n    lambda <- eigen(M %*% Sy)$values\n    STAT <- switch(type, W2 = sum(Z^2 * t)/N, U2 = sum((Z - \n                                                          Zbar)^2 * t)/N, A2 = sum((Z^2 * t/(H * (1 - H)))[-length(I)])/N)\n    return(c(STAT, lambda))\n  }\n  cvm.pval.disc.sim <- function(STATISTIC, lambda, y, type, \n                                tol, B) {\n    knots.y <- knots(y)\n    fknots.y <- y(knots.y)\n    u <- runif(B * length(x))\n    u <- sapply(u, function(a) return(knots.y[sum(a > fknots.y) + \n                                                1]))\n    dim(u) <- c(B, length(x))\n    s <- apply(u, 1, cvm.stat.disc, y, type)\n    s <- s[1, ]\n    return(sum(s >= STATISTIC - tol)/B)\n  }\n  type <- match.arg(type)\n  DNAME <- deparse(substitute(x))\n  if (is.stepfun(y)) {\n    if (length(setdiff(x, knots(y))) != 0) {\n      stop(\"Data are incompatable with null distribution; \", \n           \"Note: This function is meant only for discrete distributions \", \n           \"you may be receiving this error because y is continuous.\")\n    }\n    tempout <- cvm.stat.disc(x, y, type = type)\n    STAT <- tempout[1]\n    lambda <- tempout[2:length(tempout)]\n    if (!simulate.p.value) {\n      PVAL <- cvm.pval.disc(STAT, lambda)\n    }\n    else {\n      PVAL <- cvm.pval.disc.sim(STAT, lambda, y, type, \n                                tol, B)\n    }\n    METHOD <- paste(\"Cramer-von Mises -\", type)\n    names(STAT) <- as.character(type)\n    RVAL <- list(statistic = STAT, p.value = PVAL, alternative = \"Two.sided\", \n                 method = METHOD, data.name = DNAME)\n  }\n  else {\n    stop(\"Null distribution must be a discrete.\")\n  }\n  class(RVAL) <- \"htest\"\n  return(RVAL)\n}",
    "created" : 1515475102604.000,
    "dirty" : true,
    "encoding" : "",
    "folds" : "",
    "hash" : "1185231239",
    "id" : "4E1534CF",
    "lastKnownWriteTime" : 8533514390746440307,
    "last_content_update" : 1515475120701,
    "path" : null,
    "project_path" : null,
    "properties" : {
        "tempName" : "Untitled2"
    },
    "relative_order" : 6,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}