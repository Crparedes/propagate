source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
gc()
library(NORTATA)
library(NORTARA)
invcdfnames <- c("qt","qpois","qnorm")
paramslists <- list(
m1 = list(df = 3),
m2 = list(lambda = 5),
m3 = NULL # it means list(mean = 0, sd = 1)
)
cor_matrix <- matrix(c(1,0.5,-0.3,0.5,1,0.4,-0.3,0.4,1), 3)
cor_matrix
Sigma <- BoundingRA(cor_matrix,invcdfnames,paramslists)
Sigma
qt
BoundingRA
invcdfnames <- c("qt","qt","qt")
paramslists <- list(
m1 = list(df = 3),
m2 = list(df = 5),
m3 = list(df = 10),
)
cor_matrix <- matrix(c(1,0.5,-0.3,0.5,1,0.4,-0.3,0.4,1), 3)
Sigma <- BoundingRA(cor_matrix,invcdfnames,paramslists)
Sigma
Sigma <- matrix(.7, nrow=4, ncol=4)
Sigma[1, 3] <- Sigma[3, 1] <- 0.2
diag(Sigma) <- 1
Sigma
invcdfnames <- c("qt","qt","qt")
paramslists <- list(
m1 = list(df = 3),
m2 = list(df = 5),
m3 = list(df = 10),
)
invcdfnames <- c("qt","qt","qt")
paramslists <- list(
m1 = list(df = 3),
m2 = list(df = 5),
m3 = list(df = 10),
)
cormat <- Sigma
Sigma2 <- BoundingRA(cormat,invcdfnames,paramslists)
Sigma <- matrix(.7, nrow=4, ncol=4)
Sigma[1, 3] <- Sigma[3, 1] <- 0.2
diag(Sigma) <- 1
invcdfnames <- c("qt","qt","qt", "qt")
paramslists <- list(
m1 = list(df = 3),
m2 = list(df = 5),
m3 = list(df = 10),
m4 = list(df = 20)
)
cormat <- Sigma
Sigma2 <- BoundingRA(cormat,invcdfnames,paramslists)
Sigma2
rawvars <- mvrnorm(n=npoints, mu=mu, Sigma=Sigma, empirical = T)
mu <- rep(0,4) # Support up to 4 variables at once
rawvars <- mvrnorm(n=npoints, mu=mu, Sigma=Sigma, empirical = T)
set.seed(123)
npoints <- 100000
mu <- rep(0,4) # Support up to 4 variables at once
Sigma <- matrix(.7, nrow=4, ncol=4)
Sigma[1, 3] <- Sigma[3, 1] <- 0.2
diag(Sigma) <- 1
cormat <- Sigma
Sigma2 <- BoundingRA(cormat,invcdfnames,paramslists)
Sigma2
rawvars <- mvrnorm(n=npoints, mu=mu, Sigma=Sigma2, empirical = T)
cor(rawvars)
P <- pnorm(rawvars, lower.tail = FALSE)
cor(P, use = "complete.obs")
qt.scaled <- function (p, df, mean = 0, sd = 1, ncp, lower.tail = F, log.p = FALSE)
{
mean + sd * stats::qt(p, df, ncp = ncp, log.p = log.p)
}
BoundingRA
?genNORTARA
invcdfnames <- c("qt","qpois","qnorm","qweibull","qunif")
paramslists <- list(
m1 = list(df = 3),
m2 = list(lambda = 5),
m4 = list(shape = 1)
)
defaultindex <- c(3,5)
cor_matrix <- matrix(c(1.0,-0.4,0.1,0.7,-0.2,-0.4,
1.0,0.4,0.4,0.9,0.1,0.4,1.0,
0.5,0.5,0.7, 0.4,0.5,1.0,
0.7,-0.2,0.9,0.5,0.7,1.0),5,5)
res <- genNORTARA(10000,cor_matrix,invcdfnames,paramslists,defaultindex)
cor(res)
cor(res)
invcdfnames <- c("qt","qpois","qnorm")
paramslists <- list(
m1 = list(df = 3),
m2 = list(lambda = 5)
)
defaultindex <- 3
cor_matrix <- matrix(c(1,0.5,-0.3,0.5,1,0.4,-0.3,0.4,1), 3)
res <- genNORTARA(10000,cor_matrix,invcdfnames,paramslists,defaultindex)
cor(res) #This time cor(res) may very close to cor_matrix.
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
library(MASS)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
Sigma
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
Sigma
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
1/4 + 1/16 + 1/64 + 1/256 + 1/1024
?cor
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
mvrnorm
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
Sigma <- matrix(.7, nrow=4, ncol=4)
Sigma[1, 3] <- Sigma[3, 1] <- 0.2
Sigma[1, 4] <- Sigma[4, 1] <- 0.5
diag(Sigma) <- 1
Sigma
Sigma <- matrix(.7, nrow=4, ncol=4)
Sigma[1, 3] <- Sigma[3, 1] <- 0.2
Sigma[1, 4] <- Sigma[4, 1] <- 0.5
Sigma <- 2 * sin(pi * Sigma / 6)
diag(Sigma) <- 1
Sigma
diag(Sigma) <- 1
rawvars <- mvrnorm(n=npoints, mu=mu, Sigma=Sigma, empirical = T)
cor(rawvars, method = "spearman")
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
nu <- c(3, 5, 10, 20)
mu <- c(0, 1, 2, 5)
sd <- c(0.5, 0.2, 0.1, 1)
source('~/.active-rstudio-document', echo=TRUE)
qt
?qt
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
cor(Z)
fitdistr(Z[m ])
fitdistr(Z[, 1 ], "t")
fitdistr(Z[, 2], "t")
fitdistr(Z[, 3], "t")
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
0.7/0.668
0.2/0.191
0.5/0.474
source('~/.active-rstudio-document', echo=TRUE)
cov(Z)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
0.704/0.7
0.202/0.2
0.505/0.5
0.705/0.7
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
cor(P)
source('~/.active-rstudio-document', echo=TRUE)
cor(P)
var(P[, 1])
var(P[, 2])
var(P[, 3])
mean(P[, 3])
cov(P)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
cov.trob(Z)
cov.trob(Z, cor = T)
set.seed(123)
X <- 1:20
Y <- 3 + 2 * X + rnorm(20, 0, 2)
plot(X, Y)
LM <- lm(Y ~ X)
NLS <- nlsLM(Y ~ a + b * X, start = list(a = 3, b = 2))
predict(LM, newdata = data.frame(X = 14.5), interval = "conf")
predictNLS(NLS, newdata = data.frame(X = 14.5), interval = "conf")$summary
predict(LM, newdata = data.frame(X = 14.5), interval = "pred")
predictNLS(NLS, newdata = data.frame(X = 14.5), interval = "pred")$summary
source('~/.active-rstudio-document', echo=TRUE)
0.509/0.5
0.2028/0.2
cor2cov
cov2cor
library(propagate)
set.seed(123)
X <- 1:20
Y <- 3 + 2 * X + rnorm(20, 0, 2)
plot(X, Y)
LM <- lm(Y ~ X)
NLS <- nlsLM(Y ~ a + b * X, start = list(a = 3, b = 2))
predict(LM, newdata = data.frame(X = 14.5), interval = "conf")
predictNLS(NLS, newdata = data.frame(X = 14.5), interval = "conf")$summary
predict(LM, newdata = data.frame(X = 14.5), interval = "pred")
predictNLS(NLS, newdata = data.frame(X = 14.5), interval = "pred")$summary
cor(P)
cov(P)
cov(rawvars)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
fitdistr(Z[, 1], "t")
cor(rawvars)
set.seed(123)
npoints <- 1000000
mu <- rep(0,4) # Support up to 4 variables at once
Sigma <- matrix(.7, nrow=4, ncol=4)
Sigma[1, 3] <- Sigma[3, 1] <- 0.2
Sigma[1, 4] <- Sigma[4, 1] <- 0.5
rawvars <- mvrnorm(n=npoints, mu=mu, Sigma=Sigma, empirical = T)
set.seed(123)
npoints <- 1000000
mu <- rep(0,4) # Support up to 4 variables at once
Sigma <- matrix(.7, nrow=4, ncol=4)
Sigma[1, 3] <- Sigma[3, 1] <- 0.2
Sigma[1, 4] <- Sigma[4, 1] <- 0.5
diag(Sigma) <- 1
rawvars <- mvrnorm(n=npoints, mu=mu, Sigma=Sigma, empirical = T)
cor(rawvars)
rawvars[, 1] <- rawvar[, 1]/sqrt(rchisq(1000000, 5)/5)
rawvars[, 1] <- rawvars[, 1]/sqrt(rchisq(1000000, 5)/5)
cor(rawvars)
fitdistr(rawvars[, 1], "t")
source('~/.active-rstudio-document', echo=TRUE)
fitdistr(Z[, 1], "t")
plot(Z[, 1], Z[, 2])
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
plot(P[, 1], P[, 2])
plot(Z[, 1], Z[, 2])
plot(P[, 1], P[, 2])
plot(Z[, 1], Z[, 2])
source('~/.active-rstudio-document', echo=TRUE)
plot(Z[, 1], Z[, 2])
source('~/.active-rstudio-document', echo=TRUE)
plot(Z[, 1], Z[, 2])
source('~/.active-rstudio-document', echo=TRUE)
plot(Z[, 1], Z[, 2])
fitdistr(Z[, 1], "t")
fitdistr(Z[, 2], "t")
fitdistr(Z[, 3], "t")
fitDistr(Z[, 1])
fitDistr(Z[, 2])
fitdistr(Z[, 2], "t")
fitDistr(Z[, 2], nbin = 1000)
SIGMA <- matrix(c(1, 0.2, 0, 0.2, 2, 0, 0, 0, 4), nrow = 3)
MU <- c(10, 2, 20)
SIGMA
source('C:/temp/propagate/mvtnu.R', echo=TRUE)
source('C:/temp/propagate/mvtnu.R', echo=TRUE)
source('C:/temp/propagate/mvtnu.R', echo=TRUE)
source('C:/temp/propagate/mvtnu.R', echo=TRUE)
source('C:/temp/propagate/mvtnu.R', echo=TRUE)
source('C:/temp/propagate/mvtnu.R', echo=TRUE)
source('C:/temp/propagate/mvtnu.R', echo=TRUE)
source('C:/temp/propagate/mvtnu.R', echo=TRUE)
source('C:/temp/propagate/mvtnu.R', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('C:/temp/propagate/mvtnu.R', echo=TRUE)
source('C:/temp/propagate/mvtnu.R', echo=TRUE)
source('C:/temp/propagate/mvtnu.R', echo=TRUE)
source('C:/temp/propagate/mvtnu.R', echo=TRUE)
source('C:/temp/propagate/mvtnu.R', echo=TRUE)
?cor
source('C:/temp/propagate/mvtnu.R', echo=TRUE)
source('C:/temp/propagate/mvtnu.R', echo=TRUE)
?pnorm
source('C:/temp/propagate/mvtnu.R', echo=TRUE)
source('C:/temp/propagate/mvtnu.R', echo=TRUE)
source('C:/temp/propagate/mvtnu.R', echo=TRUE)
SIGMA <- matrix(c(1, 0.2, 0.5, 0.2, 2, 0, 0.5, 0, 4), nrow = 3)
SIGMA
source('C:/temp/propagate/mvtnu.R', echo=TRUE)
plot(res[, 1:2], pch = 16, cex = 0.5, asp = 1)
cor2cov
SIGMA
cor2cov(SIGMA, diag(SIGMA))
z <- cor2cov(SIGMA, diag(SIGMA))
library(rgl)
plot3d(res[, 1:3])
z <- cor2cov(SIGMA, diag(SIGMA))
z
cor(z)
z <- cor2cov(SIGMA, diag(SIGMA))
SIGMA
z <- cor2cov(SIGMA, sqrt(diag(SIGMA)))
z
for (i in 1:ncol(res)) print(MASS:::fitdistr(res[, i], "t"))
fitDistr(res[, 1])
fitDistr(res[, 2])
fitDistr(res[, 3])
cor(res)
qt
?qt
qt(0.28)
qt(0.28, 10)
qt(0.28, 10, lower.tail = F)
qt(0, 10, lower.tail = F)
qt(1, 10, lower.tail = F)
qt(0.5, 10, lower.tail = F)
source('C:/temp/propagate/mvtnu.R', echo=TRUE)
asin()
source('C:/temp/propagate/mvtnu.R', echo=TRUE)
source('C:/temp/propagate/mvtnu.R', echo=TRUE)
source('C:/temp/propagate/mvtnu.R', echo=TRUE)
D(expression(dnorm))
D(expression("dnorm"))
source('C:/temp/propagate/mvtnu.R', echo=TRUE)
SIGMA <- matrix(c(1, 0.2, 0.2, 0.2, 2, 0, 0.2, 0, 4), nrow = 3)
SIGMA
source('C:/temp/propagate/mvtnu.R', echo=TRUE)
source('C:/temp/propagate/mvtnu.R', echo=TRUE)
source('C:/temp/propagate/mvtnu.R', echo=TRUE)
source('C:/temp/propagate/mvtnu.R', echo=TRUE)
source('C:/temp/propagate/mvtnu.R', echo=TRUE)
source('C:/temp/propagate/mvtnu.R', echo=TRUE)
install.packages("tmvtnorm", type = "source")
install.packages("bit", type = "source")
install.packages("ff", type = "source")
install.packages("minpack.lm", type = "source")
library(propagate)
source('C:/temp/propagate/mvtnu.R', echo=TRUE)
source('C:/temp/propagate/mvtnu.R', echo=TRUE)
source('C:/temp/propagate/mvtnu.R', echo=TRUE)
source('C:/temp/propagate/mvtnu.R', echo=TRUE)
source('C:/temp/propagate/mvtnu.R', echo=TRUE)
source('C:/temp/propagate/mvtnu.R', echo=TRUE)
source('C:/temp/propagate/mvtnu.R', echo=TRUE)
source('C:/temp/propagate/mvtnu.R', echo=TRUE)
source('C:/temp/propagate/mvtnu.R', echo=TRUE)
source('C:/temp/propagate/mvtnu.R', echo=TRUE)
source('C:/temp/propagate/mvtnu.R', echo=TRUE)
source('C:/temp/propagate/mvtnu.R', echo=TRUE)
source('C:/temp/propagate/mvtnu.R', echo=TRUE)
source('C:/temp/propagate/mvtnu.R', echo=TRUE)
source('C:/temp/propagate/mvtnu.R', echo=TRUE)
source('C:/temp/propagate/mvtnu.R', echo=TRUE)
source('C:/temp/propagate/mvtnu.R', echo=TRUE)
0.207978/0.2
0.5154050/0.5
source('C:/temp/propagate/mvtnu.R', echo=TRUE)
source('C:/temp/propagate/mvtnu.R', echo=TRUE)
source('C:/temp/propagate/mvtnu.R', echo=TRUE)
source('C:/temp/propagate/mvtnu.R', echo=TRUE)
source('C:/temp/propagate/mvtnu.R', echo=TRUE)
source('C:/temp/propagate/mvtnu.R', echo=TRUE)
source('C:/temp/propagate/mvtnu.R', echo=TRUE)
source('C:/temp/propagate/mvtnu.R', echo=TRUE)
source('C:/temp/propagate/mvtnu.R', echo=TRUE)
source('C:/temp/propagate/mvtnu.R', echo=TRUE)
source('C:/temp/propagate/mvtnu.R', echo=TRUE)
source('C:/temp/propagate/mvtnu.R', echo=TRUE)
source('C:/temp/propagate/mvtnu.R', echo=TRUE)
source('C:/temp/propagate/mvtnu.R', echo=TRUE)
source('C:/temp/propagate/mvtnu.R', echo=TRUE)
?predictNL
library(mvtnorm)
rmvt
rmvt
source('C:/temp/mvt.R', echo=TRUE)
cor(res)
source('C:/temp/propagate/mvtnu.R', echo=TRUE)
source('C:/temp/propagate/mvtnu.R', echo=TRUE)
mvrnorm
rcmd check.options()
check.options()
Sys.setenv(`_R_CHECK_LENGTH_1_CONDITION_`="true")
a <- 1:2
if (a == 1) {
print("ok")
}
Sys.setenv(`_R_CHECK_LENGTH_1_CONDITION_`="true")
a <- 1:2
if (a == 1) {
print("ok")
}
isTRUE
isTRUE(TRUE)
isFALSE
isFALSE(TRUE)
Sys.setenv(`_R_CHECK_LENGTH_1_CONDITION_`="true")
a <- 1:2
if (a == 1) {
print("ok")
}
Sys.setenv(`_R_CHECK_LENGTH_1_CONDITION_`="false")
a <- 1:2
if (a == 1) {
print("ok")
}
Sys.setenv(`_R_CHECK_LENGTH_1_CONDITION_`="true")
a <- 1:2
if (a == 1) {
print("ok")
}
Sys.setenv(`_R_CHECK_LENGTH_1_CONDITION_`="true")
a <- 1:2
if (a == 1) {
print("ok")
}
install.packages("pandoc")
install.packages("pandoc", type = "source")
install.packages("pandoc")
install.packages("pandoc", type = "source")
Sys.setenv(`_R_CHECK_LENGTH_1_CONDITION_`="true")
Sys.setenv(`_R_CHECK_LENGTH_1_CONDITION_`="true")
a <- c(5, 0.1)
b <- c(100, 2)
DAT <- cbind(a, b)
f <- function(a, b) {
N <- 0
for (i in 1:100) {
N <- N + i * log(a) + b^(1/i)
}
return(N)
}
propagate(f, DAT, nsim = 100000)
library(propagate)
a <- c(5, 0.1)
b <- c(100, 2)
DAT <- cbind(a, b)
f <- function(a, b) {
N <- 0
for (i in 1:100) {
N <- N + i * log(a) + b^(1/i)
}
return(N)
}
propagate(f, DAT, nsim = 100000)
gc()
a <- c(5, 0.1)
b <- c(100, 2)
DAT <- cbind(a, b)
f <- function(a, b) {
N <- 0
for (i in 1:100) {
N <- N + i * log(a) + b^(1/i)
}
return(N)
}
propagate(f, DAT, nsim = 100000)
EXPR1 <- expression(x/y)
x <- c(5, 0.01)
y <- c(1, 0.01)
DF1 <- cbind(x, y)
RES1 <- propagate(expr = EXPR1, data = DF1, type = "stat",
do.sim = TRUE, verbose = TRUE)
RES1
EXPR2 <- expression(x/y)
x <- c(5, 0.01, 12)
y <- c(1, 0.01, 5)
DF2 <- cbind(x, y)
RES2 <- propagate(expr = EXPR2, data = DF2, type = "stat",
do.sim = TRUE, verbose = TRUE)
RES2
RES2
summary(RES2)
source('C:/temp/propagate/R/summary.propagate.R', echo=TRUE)
summary(RES2)
source('C:/temp/propagate/mvtnu.R', echo=TRUE)
source('C:/temp/propagate/mvtnu.R', echo=TRUE)
source('C:/temp/propagate/mvtnu.R', echo=TRUE)
